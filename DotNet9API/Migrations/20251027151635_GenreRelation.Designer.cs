// <auto-generated />
using System;
using DotNet9API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNet9API.Migrations
{
    [DbContext(typeof(VideoGameDbContext))]
    [Migration("20251027151635_GenreRelation")]
    partial class GenreRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DotNet9API.Models.Developer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Developer");
                });

            modelBuilder.Entity("DotNet9API.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("DotNet9API.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("DotNet9API.Models.VideoGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DeveloperId")
                        .HasColumnType("int");

                    b.Property<string>("Platform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PublisherId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.HasIndex("PublisherId");

                    b.ToTable("VideoGames");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Platform = "PS5",
                            Title = "Spider-Man 2"
                        },
                        new
                        {
                            Id = 2,
                            Platform = "Nintendo Switch",
                            Title = "The Legend of Zelda: Breath of the Wild"
                        },
                        new
                        {
                            Id = 3,
                            Platform = "PS5",
                            Title = "God of War Ragnarök"
                        },
                        new
                        {
                            Id = 4,
                            Platform = "PS5",
                            Title = "Elden Ring"
                        },
                        new
                        {
                            Id = 5,
                            Platform = "Xbox Series X",
                            Title = "Halo Infinite"
                        },
                        new
                        {
                            Id = 6,
                            Platform = "PC",
                            Title = "Starfield"
                        },
                        new
                        {
                            Id = 7,
                            Platform = "Nintendo Switch",
                            Title = "Super Mario Odyssey"
                        },
                        new
                        {
                            Id = 8,
                            Platform = "PC",
                            Title = "Cyberpunk 2077"
                        },
                        new
                        {
                            Id = 9,
                            Platform = "PS5",
                            Title = "Horizon Forbidden West"
                        },
                        new
                        {
                            Id = 10,
                            Platform = "PS5",
                            Title = "Red Dead Redemption 2"
                        });
                });

            modelBuilder.Entity("DotNet9API.Models.VideoGameDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VideoGameId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VideoGameId")
                        .IsUnique();

                    b.ToTable("VideoGameDetails");
                });

            modelBuilder.Entity("GenreVideoGame", b =>
                {
                    b.Property<int>("GenresId")
                        .HasColumnType("int");

                    b.Property<int>("VideoGamesId")
                        .HasColumnType("int");

                    b.HasKey("GenresId", "VideoGamesId");

                    b.HasIndex("VideoGamesId");

                    b.ToTable("GenreVideoGame");
                });

            modelBuilder.Entity("DotNet9API.Models.VideoGame", b =>
                {
                    b.HasOne("DotNet9API.Models.Developer", "Developer")
                        .WithMany()
                        .HasForeignKey("DeveloperId");

                    b.HasOne("DotNet9API.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId");

                    b.Navigation("Developer");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("DotNet9API.Models.VideoGameDetails", b =>
                {
                    b.HasOne("DotNet9API.Models.VideoGame", null)
                        .WithOne("VideoGameDetails")
                        .HasForeignKey("DotNet9API.Models.VideoGameDetails", "VideoGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GenreVideoGame", b =>
                {
                    b.HasOne("DotNet9API.Models.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotNet9API.Models.VideoGame", null)
                        .WithMany()
                        .HasForeignKey("VideoGamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DotNet9API.Models.VideoGame", b =>
                {
                    b.Navigation("VideoGameDetails")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
